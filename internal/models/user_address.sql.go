// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.0
// source: user_address.sql

package models

import (
	"context"
)

const createNewAddress = `-- name: CreateNewAddress :one
INSERT INTO "Address" (
		"city",
		"state",
		"country",
		"pinCode",
		"roomNumber",
		"buildingNumber",
		"userId"
	)
VALUES ($1, $2, $3, $4, $5, $6, $7)
RETURNING id, city, state, country, "pinCode", "roomNumber", "buildingNumber", "createdAt", "updatedAt", "userId", "isDeleted"
`

type CreateNewAddressParams struct {
	City           string `json:"city"`
	State          string `json:"state"`
	Country        string `json:"country"`
	PinCode        string `json:"pinCode"`
	RoomNumber     string `json:"roomNumber"`
	BuildingNumber string `json:"buildingNumber"`
	UserId         int32  `json:"userId"`
}

func (q *Queries) CreateNewAddress(ctx context.Context, arg CreateNewAddressParams) (Address, error) {
	row := q.db.QueryRowContext(ctx, createNewAddress,
		arg.City,
		arg.State,
		arg.Country,
		arg.PinCode,
		arg.RoomNumber,
		arg.BuildingNumber,
		arg.UserId,
	)
	var i Address
	err := row.Scan(
		&i.ID,
		&i.City,
		&i.State,
		&i.Country,
		&i.PinCode,
		&i.RoomNumber,
		&i.BuildingNumber,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.UserId,
		&i.IsDeleted,
	)
	return i, err
}
