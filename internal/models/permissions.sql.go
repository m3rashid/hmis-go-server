// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.0
// source: permissions.sql

package models

import (
	"context"
)

const createNewPermission = `-- name: CreateNewPermission :one
INSERT INTO "Permission" ("name", "description", "resourceId") VALUES ($1, $2, $3) RETURNING "id"
`

type CreateNewPermissionParams struct {
	Name        string `json:"name"`
	Description string `json:"description"`
	ResourceId  int32  `json:"resourceId"`
}

func (q *Queries) CreateNewPermission(ctx context.Context, arg CreateNewPermissionParams) (int32, error) {
	row := q.db.QueryRowContext(ctx, createNewPermission, arg.Name, arg.Description, arg.ResourceId)
	var id int32
	err := row.Scan(&id)
	return id, err
}

const createNewRole = `-- name: CreateNewRole :one
INSERT INTO "Role" ("name", "description") VALUES ($1, $2) RETURNING "id"
`

type CreateNewRoleParams struct {
	Name        string `json:"name"`
	Description string `json:"description"`
}

func (q *Queries) CreateNewRole(ctx context.Context, arg CreateNewRoleParams) (int32, error) {
	row := q.db.QueryRowContext(ctx, createNewRole, arg.Name, arg.Description)
	var id int32
	err := row.Scan(&id)
	return id, err
}
